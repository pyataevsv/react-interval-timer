{"version":3,"sources":["audio/gong.mp3","audio/three.mp3","audio/two.mp3","audio/one.mp3","audio/go.mp3","audio/rest.mp3","audio/cheer.mp3","index.js"],"names":["module","exports","TimerApp","props","state","inConfigure","params","readyTime","workTime","restTime","sets","reps","repsRest","timer","status","allTime","paramsChange","bind","firstTimerOpen","key","e","newState","this","setState","currentUserSetting","startParams","toSeconds","clear","runTimer","Promise","res","foo","then","result","obj","resolve","now","Date","Math","round","countDown","setInterval","secondsLeft","clearInterval","newTimerState","newAllTimeState","window","confirm","app","Config","isConfChange","renderTimer","setParam","Timer","renderParmas","startTimer","timerState","timerSettings","stopStart","className","React","Component","pauseName","document","addEventListener","console","log","hidden","sound","showCountDown","src","three","autoPlay","two","one","gong","go","rest","cheer","pauseIcon","xmlns","viewBox","fill","width","height","d","startIcon","icon","progressStyle","String","getllTimeProgress","value","showProgress","styles","buildStyles","rotation","textSize","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","showStatus","toMmss","style","onClick","WorkCounter","RestCounter","SetCounter","RepsCounter","RepsRestCounter","sliderChange","sliderDefaultValue","target","getAttribute","defaultValue","onChange","scale","x","step","min","max","mmss","Number","match","sec","floor","secremainder","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5af2a819.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gong.2f3ef142.mp3\";","module.exports = __webpack_public_path__ + \"static/media/three.516d1820.mp3\";","module.exports = __webpack_public_path__ + \"static/media/two.f216d58a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/one.5eb55970.mp3\";","module.exports = __webpack_public_path__ + \"static/media/go.920e4c3c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rest.4b823bed.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cheer.826dcaac.mp3\";","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Slider from '@material-ui/core/Slider';\nimport './style.css';\nimport { buildStyles, CircularProgressbarWithChildren } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport gong from './audio/gong.mp3'\nimport three from './audio/three.mp3'\nimport two from './audio/two.mp3'\nimport one from './audio/one.mp3'\nimport go from './audio/go.mp3'\nimport rest from './audio/rest.mp3'\nimport cheer from './audio/cheer.mp3'\n\n\n\nclass TimerApp extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      inConfigure: true,\n      params: {\n        readyTime: '00:10',\n        workTime: '00:30',\n        restTime: '00:15',\n        sets: '5',\n        reps: '3',\n        repsRest: '00:30'\n      },\n      timer: {\n        workTime: '',\n        restTime: '',\n        sets: '',\n        reps: '',\n        repsRest: '',\n        status: ''\n      },\n      allTime: 0,\n    };\n\n    this.paramsChange = this.paramsChange.bind(this);\n    this.firstTimerOpen = true;\n\n  }\n\n  paramsChange(key, e) {\n    //validation for mm:ss fields\n    const newState = this.state;\n    newState.params[key] = (true) ? e : e + ':';\n    this.setState(newState);\n  }\n\n  renderTimer() {\n    this.currentUserSetting = this.state.timer;\n    this.setState({ inConfigure: !this.state.inConfigure });\n  }\n\n  startTimer() {\n\n    //timer state init\n    if (this.firstTimerOpen) {\n      this.startParams = {\n        readyTime: toSeconds(this.state.params.readyTime),\n        workTime: toSeconds(this.state.params.workTime),\n        restTime: toSeconds(this.state.params.restTime),\n        sets: this.state.params.sets,\n        reps: this.state.params.reps,\n        repsRest: toSeconds(this.state.params.repsRest),\n        status: 'readyTime'\n      }\n\n      //we will set new states with this object\n      this.newState = {\n        readyTime: toSeconds(this.state.params.readyTime),\n        workTime: toSeconds(this.state.params.workTime),\n        restTime: toSeconds(this.state.params.restTime),\n        sets: this.state.params.sets,\n        reps: this.state.params.reps,\n        repsRest: toSeconds(this.state.params.repsRest),\n        status: 'readyTime'\n      }\n\n      this.firstTimerOpen = !this.firstTimerOpen;\n      this.allTime = this.startParams.readyTime + (this.startParams.sets * this.startParams.workTime + this.startParams.restTime * (this.startParams.sets - 1)) * this.startParams.reps + this.startParams.repsRest * (this.startParams.reps - 1);\n\n\n    }\n\n    //param to stop our timer\n    this.clear = false;\n    this.runTimer();\n  }\n\n  runTimer() {\n\n    new Promise((res) => {\n\n\n      if (this.newState.sets !== 0 && this.newState.reps !== 0) {\n\n\n        return this.timer(this.newState, this.newState.status, this.foo, res);\n      }\n    }).then((result) => {\n\n      if (result === 'readyTime') {\n        this.newState.status = 'workTime';\n        this.runTimer();\n      }\n      if (result === 'workTime') {\n        this.newState.sets--;\n        if (this.newState.sets > 0) {\n          this.newState.restTime = this.startParams.restTime;\n          this.newState.status = 'restTime'\n          this.runTimer();\n        } else {\n          this.newState.reps--;\n          if (this.newState.reps > 0) {\n            this.newState.sets = this.startParams.sets;\n            this.newState.status = 'repsRest';\n            this.runTimer();\n          } else {\n            this.foo(this.newState);\n          }\n        }\n      }\n      if (result === 'restTime') {\n        this.newState.status = 'workTime';\n        this.newState.workTime = this.startParams.workTime;\n        this.runTimer()\n      }\n      if (result === 'repsRest') {\n        this.newState.repsRest = this.startParams.repsRest;\n        this.newState.sets = this.startParams.sets;\n        this.newState.restTime = this.startParams.restTime;\n        this.newState.workTime = this.startParams.workTime;\n        this.newState.status = 'workTime';\n        this.runTimer();\n      }\n    })\n  }\n\n\n  timer(obj, key, foo, resolve) {\n    const now = Date.now();\n    const then = now + obj[key] * 1000;\n\n    obj[key] = Math.round((then - now) / 1000);\n    this.foo(obj);\n\n\n    let countDown = setInterval(() => {\n\n      if (this.clear === true) {\n        clearInterval(countDown);\n        return;\n      };\n      let secondsLeft = Math.round((then - Date.now()) / 1000);\n\n      obj[key] = secondsLeft;\n\n      this.allTime--;\n\n      this.foo(obj);\n\n      if (secondsLeft <= 0) {\n        clearInterval(countDown);\n        return resolve(key);\n      }\n    }, 1000);\n  }\n\n  foo(obj) {\n    const newTimerState = this.state;\n    newTimerState.timer = obj;\n    this.setState(newTimerState);\n\n\n    const newAllTimeState = this.state;\n    newAllTimeState.allTime = this.allTime;\n    this.setState(newAllTimeState);\n\n\n  }\n\n  stopStart() {\n    this.clear = !this.clear;\n  }\n\n  renderParmas() {\n    if (window.confirm('shure?')) {\n      //  this.setState({ inConfigure: !this.state.inConfigure });\n      const newState = this.state;\n      newState.timer = this.currentUserSetting;\n      newState.inConfigure = !this.state.inConfigure;\n      this.clear = true;\n      this.firstTimerOpen = true;\n      this.setState(newState);\n    }\n  }\n\n  render() {\n    const inConfigure = this.state.inConfigure;\n    let app;\n\n    if (inConfigure) {\n      app = <Config\n        isConfChange={() => this.renderTimer()}\n        setParam={this.paramsChange}\n        params={this.state.params}\n      />;\n    } else {\n      app = <Timer\n        isConfChange={() => this.renderParmas()}\n        startTimer={() => this.startTimer()}\n        timerState={this.state.timer}\n        timerSettings={this.state.params}\n        allTime={this.state.allTime}\n        stopStart={() => this.stopStart()}\n      />;\n    }\n\n    return (\n      <div className=\"timer-app\">\n        {app}\n      </div>\n    );\n  }\n}\n\nclass Timer extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { pauseName: 'PAUSE' };\n    this.stopStart = this.stopStart.bind(this);\n\n    document.addEventListener('visibilitychange', () => {\n      console.log(document.hidden);\n\n      if (document.hidden && this.state.pauseName !== 'GO') {\n        this.stopStart()\n      }\n    });\n\n  }\n\n  componentWillUnmount() {\n    console.log('unmount');\n\n  }\n\n  stopStart() {\n    const newState = (this.state.pauseName === 'PAUSE') ? 'GO' : 'PAUSE';\n    this.setState({ pauseName: newState });\n    this.props.stopStart();\n    if (newState === 'PAUSE') {\n      this.props.startTimer();\n    }\n  }\n\n  showCountDown() {\n    switch (this.props.timerState.status) {\n      case 'workTime':\n        return this.props.timerState.workTime;\n      case 'restTime':\n        return this.props.timerState.restTime;\n      case 'repsRest':\n        return this.props.timerState.repsRest;\n      case 'readyTime':\n        return this.props.timerState.readyTime;\n\n      default:\n        return\n    }\n  }\n\n  showProgress() {\n    const status = this.props.timerState.status;\n    let res;\n    if (!!status) {\n      res = (100 - toSeconds(100 * (this.props.timerState[status] - 1)) / toSeconds(this.props.timerSettings[status]));\n    } else {\n      res = 1;\n    }\n    return res;\n  }\n\n  getllTimeProgress() {\n    const allTime = toSeconds(this.props.timerSettings.readyTime) + (this.props.timerSettings.sets * toSeconds(this.props.timerSettings.workTime) + toSeconds(this.props.timerSettings.restTime) * (this.props.timerSettings.sets - 1)) * this.props.timerSettings.reps + toSeconds(this.props.timerSettings.repsRest) * (this.props.timerSettings.reps - 1);\n\n\n    const res = 100 * (1 - this.props.allTime / allTime)\n    if (res < 3) {\n      return 3;\n    } else {\n      return res;\n    }\n  }\n\n  componentDidMount() {\n    this.props.startTimer();\n    console.log('mount');\n  }\n\n  showStatus() {\n\n    if (this.props.allTime === 0)\n      return 'DONE';\n\n\n    switch (this.props.timerState.status) {\n      case 'workTime':\n        return 'GO';\n      case 'readyTime':\n        return 'READY';\n      case 'restTime':\n        return 'REST'\n      case 'repsRest':\n        return 'NEW REP'\n      default:\n        return '';\n    }\n  }\n\n  render() {\n    let sound;\n    if (this.showCountDown() === 3) {\n      sound = <audio src={three} autoPlay></audio>;\n    } else if (this.showCountDown() === 2) {\n      sound = <audio src={two} autoPlay></audio>;\n    } else if (this.showCountDown() === 1) {\n      sound = <audio src={one} autoPlay></audio>;\n    } else if (this.props.timerState.status === 'repsRest') {\n      sound = <audio src={gong} autoPlay></audio>;\n    } else if (this.props.timerState.status === 'workTime') {\n      sound = <audio src={go} autoPlay></audio>;\n    } else if (this.props.timerState.status === 'restTime') {\n      sound = <audio src={rest} autoPlay></audio>;\n    }\n\n    if (this.showCountDown() === 0) {\n      sound = <audio src={cheer} autoPlay></audio>;\n    }\n\n\n    const pauseIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#5d5d5d\" width=\"30px\" height=\"30px\"><path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" /><path d=\"M0 0h24v24H0z\" fill=\"none\" /></svg>;\n    const startIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#5d5d5d\" width=\"30px\" height=\"30px\"><path d=\"M8 5v14l11-7z\" /><path d=\"M0 0h24v24H0z\" fill=\"none\" /></svg>;\n\n    if (this.state.pauseName === 'PAUSE') {\n      this.icon = pauseIcon;\n    } else {\n      this.icon = startIcon;\n    }\n\n    const progressStyle = {\n      width: String(this.getllTimeProgress()) + '%',\n\n    }\n\n    // index.js:1 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.\n    // in Timer (at src/index.js:210)\n\n\n    return (\n      <div className='timer-wrapper'>\n        {sound}\n        <div className='timer-progress'>\n          <CircularProgressbarWithChildren\n            value={this.showProgress()}\n            // text={toMmss(this.showCountDown())}\n            styles={buildStyles({\n              rotation: 0.50,\n              textSize: '16px',\n              pathTransitionDuration: 1,\n              pathColor: `#5cc7d8`,\n              textColor: '#f88',\n              trailColor: 'rgba(251, 255, 255, 0.61)',\n              backgroundColor: '#fbffff',\n            })}\n          >\n            <div className='progress-out-circle'>\n              <div className='progress-status'>{this.showStatus()}</div>\n              <div className='progress-countdown'>{toMmss(this.showCountDown())}</div>\n            </div>\n\n          </CircularProgressbarWithChildren>\n\n        </div>\n        <div className='all-progress-bar'>\n          <div className='setsreps-progress'>\n            <div>\n              <div className='sets-reps'>\n                Sets: <span>{this.props.timerState.sets}</span>/<span>{this.props.timerSettings.sets}</span>\n              </div>\n            </div>\n            <div>\n              <div>\n                Reps: <span>{this.props.timerState.reps}</span>/<span>{this.props.timerSettings.reps}</span>\n              </div>\n            </div>\n          </div>\n          <div>\n            <div className='timecount-box'>\n              <div>Time:</div>\n              <div><span>{toMmss(this.props.allTime)}</span></div>\n            </div>\n            <div className='alltime-progressbar'>\n              <div className='progress-line' style={progressStyle}></div>\n            </div>\n          </div>\n\n        </div>\n        <div className='btn-box'>\n          <button\n            className='timer-btn'\n            onClick={this.stopStart}\n          >{this.icon}</button>\n          <button\n            className='timer-btn'\n            onClick={() => this.props.isConfChange()}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#5d5d5d\" width=\"30px\" height=\"30px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M6 6h12v12H6z\" /></svg>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Config extends React.Component {\n\n  render() {\n    return (\n      <div className='config-wrapper'>\n        <div><h1>Interval timer</h1></div>\n        <div className='setting-box'>\n          <WorkCounter setParam={this.props.setParam} params={this.props.params} />\n          <RestCounter setParam={this.props.setParam} params={this.props.params} />\n          <SetCounter setParam={this.props.setParam} params={this.props.params} />\n          <RepsCounter setParam={this.props.setParam} params={this.props.params} />\n          <RepsRestCounter setParam={this.props.setParam} params={this.props.params} />\n\n        </div>\n        <div>\n          <button\n            className='start-btn'\n            onClick={() => this.props.isConfChange()}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"30px\" height=\"30px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M13 3h-2v10h2V3zm4.83 2.17l-1.42 1.42C17.99 7.86 19 9.81 19 12c0 3.87-3.13 7-7 7s-7-3.13-7-7c0-2.19 1.01-4.14 2.58-5.42L6.17 5.17C4.23 6.82 3 9.26 3 12c0 4.97 4.03 9 9 9s9-4.03 9-9c0-2.74-1.23-5.18-3.17-6.83z\" /></svg>\n          </button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nclass WorkCounter extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.sliderChange = this.sliderChange.bind(this);\n    this.sliderDefaultValue = toSeconds(this.props.params.workTime);\n  }\n\n  sliderChange(value) {\n    this.props.setParam('workTime', toMmss(value.target.getAttribute('aria-valuenow')));\n\n  }\n\n  step() {\n    if (toSeconds(this.props.params.workTime) < 60) {\n      return 5\n    } else {\n      return 1\n    }\n  }\n\n  render() {\n\n\n    return (\n      <div>\n        <div className='set-name-box'>\n          <div>Work</div>\n          <div>{this.props.params.workTime}</div>\n        </div>\n        <div className='slider-box'>\n          <Slider\n            defaultValue={this.sliderDefaultValue}\n            onChange={this.sliderChange}\n            scale={(x) => { if (x < 60) { return x } else { return x * 10 - 540 } }}\n            step={this.step()}\n            min={5}\n            max={120}\n          //valueLabelDisplay=\"auto\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n\nclass RestCounter extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.sliderChange = this.sliderChange.bind(this);\n    this.sliderDefaultValue = toSeconds(this.props.params.restTime);\n  }\n\n  sliderChange(value) {\n    this.props.setParam('restTime', toMmss(value.target.getAttribute('aria-valuenow')));\n\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='set-name-box'>\n          <div>Rest</div>\n          <div>{this.props.params.restTime}</div>\n        </div>\n        <div className='slider-box'>\n          <Slider\n            defaultValue={this.sliderDefaultValue}\n            onChange={this.sliderChange}\n            scale={(x) => { if (x < 60) { return x } else { return x } }}\n            step={1}\n            min={5}\n            max={120}\n          //valueLabelDisplay=\"auto\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass SetCounter extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.sliderChange = this.sliderChange.bind(this);\n    this.sliderDefaultValue = this.props.params.sets;\n  }\n\n  sliderChange(value) {\n    this.props.setParam('sets', value.target.getAttribute('aria-valuenow'));\n\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='set-name-box'>\n          <div>Sets</div>\n          <div>{this.props.params.sets}</div>\n        </div>\n        <div className='slider-box'>\n          <Slider\n            defaultValue={this.sliderDefaultValue}\n            onChange={this.sliderChange}\n            scale={(x) => { if (x < 60) { return x } else { return x } }}\n            step={1}\n            min={1}\n            max={20}\n          //valueLabelDisplay=\"auto\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass RepsCounter extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.sliderChange = this.sliderChange.bind(this);\n    this.sliderDefaultValue = this.props.params.reps;\n  }\n\n  sliderChange(value) {\n    this.props.setParam('reps', value.target.getAttribute('aria-valuenow'));\n\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='set-name-box'>\n          <div>Reps</div>\n          <div>{this.props.params.reps}</div>\n        </div>\n        <div className='slider-box'>\n          <Slider\n            defaultValue={this.sliderDefaultValue}\n            onChange={this.sliderChange}\n            scale={(x) => { if (x < 60) { return x } else { return x } }}\n            step={1}\n            min={1}\n            max={10}\n          //valueLabelDisplay=\"auto\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass RepsRestCounter extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.sliderChange = this.sliderChange.bind(this);\n    this.sliderDefaultValue = toSeconds(this.props.params.repsRest);\n  }\n\n  sliderChange(value) {\n    this.props.setParam('repsRest', toMmss(value.target.getAttribute('aria-valuenow')));\n\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='set-name-box'>\n          <div>Reps rest</div>\n          <div>{this.props.params.repsRest}</div>\n        </div>\n        <div className='slider-box'>\n          <Slider\n            defaultValue={this.sliderDefaultValue}\n            onChange={this.sliderChange}\n            scale={(x) => { if (x < 60) { return x } else { return x } }}\n            step={1}\n            min={5}\n            max={120}\n          //valueLabelDisplay=\"auto\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction toSeconds(mmss) {\n  if (typeof (mmss) == 'number') {\n    return mmss;\n  } else {\n    return Number(mmss.match(/^.*(?=:)/)) * 60 + Number(mmss.match(/(?<=:).*$/));\n\n  }\n}\n\nfunction toMmss(sec) {\n  let min = Math.floor(sec / 60);\n  let secremainder = sec % 60;\n  if (String(min).length === 1) {\n    return '0' + String(min) + ':' + String(secremainder < 10 ? '0' + secremainder : secremainder)\n  } else {\n    return String(min) + ':' + String(secremainder < 10 ? '0' + secremainder : secremainder)\n\n  }\n}\n\n\n\n\nReactDOM.render(\n  <TimerApp />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}